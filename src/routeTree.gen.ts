/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as KbRouteImport } from './routes/_kb'
import { Route as KbSplatRouteImport } from './routes/_kb/$'

const IndexLazyRouteImport = createFileRoute('/')()

const KbRoute = KbRouteImport.update({
  id: '/_kb',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexLazyRoute = IndexLazyRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))
const KbSplatRoute = KbSplatRouteImport.update({
  id: '/$',
  path: '/$',
  getParentRoute: () => KbRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/$': typeof KbSplatRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/$': typeof KbSplatRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexLazyRoute
  '/_kb': typeof KbRouteWithChildren
  '/_kb/$': typeof KbSplatRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/$'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/$'
  id: '__root__' | '/' | '/_kb' | '/_kb/$'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  KbRoute: typeof KbRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_kb': {
      id: '/_kb'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof KbRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_kb/$': {
      id: '/_kb/$'
      path: '/$'
      fullPath: '/$'
      preLoaderRoute: typeof KbSplatRouteImport
      parentRoute: typeof KbRoute
    }
  }
}

interface KbRouteChildren {
  KbSplatRoute: typeof KbSplatRoute
}

const KbRouteChildren: KbRouteChildren = {
  KbSplatRoute: KbSplatRoute,
}

const KbRouteWithChildren = KbRoute._addFileChildren(KbRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  KbRoute: KbRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
